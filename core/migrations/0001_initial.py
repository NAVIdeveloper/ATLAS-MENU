# Generated by Django 4.2.13 on 2025-08-10 15:28

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('code', models.CharField(max_length=10)),
                ('is_default', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='MasterBotText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command_start', models.TextField(blank=True, null=True)),
                ('has_group', models.TextField(blank=True, null=True)),
                ('has_no_group', models.TextField(blank=True, null=True)),
                ('new_group_confirmed', models.TextField(blank=True, null=True)),
                ('group_confirmed', models.TextField(blank=True, null=True)),
                ('btn_settings', models.CharField(blank=True, max_length=100, null=True)),
                ('btn_statistic', models.CharField(blank=True, max_length=100, null=True)),
                ('btn_add_group', models.CharField(blank=True, max_length=100, null=True)),
                ('btn_dashboard', models.CharField(blank=True, max_length=100, null=True)),
                ('btn_settings_language', models.CharField(blank=True, max_length=100, null=True)),
                ('btn_setting_group', models.CharField(blank=True, max_length=100, null=True)),
                ('btn_settings_door_state', models.CharField(blank=True, max_length=100, null=True)),
                ('btn_settings_orders_state', models.CharField(blank=True, max_length=100, null=True)),
                ('language', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='staff', to='core.language')),
            ],
        ),
        migrations.CreateModel(
            name='EngineBotText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info', models.TextField(blank=True, null=True)),
                ('start', models.TextField(blank=True, null=True)),
                ('ask_phone', models.TextField(blank=True, null=True)),
                ('success_phone', models.TextField(blank=True, null=True)),
                ('main_menu', models.TextField(blank=True, null=True)),
                ('no_orders', models.TextField(blank=True, null=True)),
                ('empty_cart', models.TextField(blank=True, null=True)),
                ('cart_info', models.TextField(blank=True, null=True)),
                ('ask_city', models.TextField(blank=True, null=True)),
                ('ask_department', models.TextField(blank=True, null=True)),
                ('ask_service_type', models.TextField(blank=True, null=True)),
                ('ask_delivery_location', models.TextField(blank=True, null=True)),
                ('error_many_department', models.TextField(blank=True, null=True)),
                ('error_distance', models.TextField(blank=True, null=True)),
                ('ask_takeaway_time', models.TextField(blank=True, null=True)),
                ('info_distance', models.TextField(blank=True, null=True)),
                ('ask_comment', models.TextField(blank=True, null=True)),
                ('ask_inform', models.TextField(blank=True, null=True)),
                ('order_informed', models.TextField(blank=True, null=True)),
                ('order_canceled', models.TextField(blank=True, null=True)),
                ('order_info', models.TextField(blank=True, null=True)),
                ('order_info_takeaway', models.TextField(blank=True, null=True)),
                ('order_status', models.TextField(blank=True, null=True)),
                ('btn_menu', models.CharField(blank=True, max_length=100, null=True)),
                ('btn_orders', models.CharField(blank=True, max_length=100, null=True)),
                ('btn_cart', models.CharField(blank=True, max_length=100, null=True)),
                ('btn_message', models.CharField(blank=True, max_length=100, null=True)),
                ('btn_ask_phone', models.CharField(blank=True, max_length=100, null=True)),
                ('btn_settings', models.CharField(blank=True, max_length=100, null=True)),
                ('btn_back', models.CharField(blank=True, max_length=100, null=True)),
                ('btn_clear', models.CharField(blank=True, max_length=100, null=True)),
                ('btn_comfirm', models.CharField(blank=True, max_length=100, null=True)),
                ('btn_location', models.CharField(blank=True, max_length=100, null=True)),
                ('btn_no', models.CharField(blank=True, max_length=100, null=True)),
                ('btn_yes', models.CharField(blank=True, max_length=100, null=True)),
                ('btn_complete', models.CharField(blank=True, max_length=100, null=True)),
                ('btn_accept', models.CharField(blank=True, max_length=100, null=True)),
                ('btn_return', models.CharField(blank=True, max_length=100, null=True)),
                ('label_main_menu', models.CharField(blank=True, max_length=100, null=True)),
                ('label_open', models.CharField(blank=True, max_length=100, null=True)),
                ('label_close', models.CharField(blank=True, max_length=100, null=True)),
                ('label_cart_cleared', models.CharField(blank=True, max_length=100, null=True)),
                ('label_cart_item', models.CharField(blank=True, max_length=100, null=True)),
                ('label_minute', models.CharField(blank=True, max_length=100, null=True)),
                ('label_pending', models.CharField(blank=True, max_length=100, null=True)),
                ('label_completed', models.CharField(blank=True, max_length=100, null=True)),
                ('label_accepted', models.CharField(blank=True, max_length=100, null=True)),
                ('label_rejected', models.CharField(blank=True, max_length=100, null=True)),
                ('language', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_text', to='core.language')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('is_partner', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
